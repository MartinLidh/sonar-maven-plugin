<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.4 on 2018-05-17 -->

<plugin>
  <name>com.viae-it.maven:sonar-maven-plugin</name>
  <description>This plugin will make maven interact with SONAR.</description>
  <groupId>com.viae-it.maven</groupId>
  <artifactId>sonar-maven-plugin</artifactId>
  <version>1.0.15-SNAPSHOT</version>
  <goalPrefix>sonar</goalPrefix>
  <mojos>
    <mojo>
      <goal>link-project-to-qualitygate</goal>
      <description>Created by Vandeperre Maarten on 03/05/2016.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>true</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.viae.maven.sonar.mojos.SonarMavenLinkProjectToQualityGateMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>branchName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>qualityGateName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarKey</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarPassword</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarServer</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarUser</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <branchName implementation="java.lang.String">${sonar.branch.name}</branchName>
        <qualityGateName implementation="java.lang.String">${sonar.qualitygate}</qualityGateName>
        <sonarKey implementation="java.lang.String">${sonar.projectKey}</sonarKey>
        <sonarPassword implementation="java.lang.String">${sonar.password}</sonarPassword>
        <sonarServer implementation="java.lang.String">${sonar.host.url}</sonarServer>
        <sonarUser implementation="java.lang.String">${sonar.login}</sonarUser>
      </configuration>
    </mojo>
    <mojo>
      <goal>set-git-branch</goal>
      <description>Mojo to set the sonar.branch property to the git branch name (if the property is not defined).
Created by Vandeperre Maarten on 29/04/2016.
</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>true</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.viae.maven.sonar.mojos.SonarMavenSetGitBranchMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters/>
    </mojo>
    <mojo>
      <goal>set-sonar-execution-start</goal>
      <description>Mojo to set the sonar.execution.start property to the last run timestamp.
Created by Vandeperre Maarten on 29/04/2016.
</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>true</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.viae.maven.sonar.mojos.SonarMavenInitSonarExecutionStartMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>branchName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>qualityGateName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarKey</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarPassword</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarServer</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarUser</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <branchName implementation="java.lang.String">${sonar.branch.name}</branchName>
        <qualityGateName implementation="java.lang.String">${sonar.qualitygate}</qualityGateName>
        <sonarKey implementation="java.lang.String">${sonar.projectKey}</sonarKey>
        <sonarPassword implementation="java.lang.String">${sonar.password}</sonarPassword>
        <sonarServer implementation="java.lang.String">${sonar.host.url}</sonarServer>
        <sonarUser implementation="java.lang.String">${sonar.login}</sonarUser>
      </configuration>
    </mojo>
    <mojo>
      <goal>sync-git-branches</goal>
      <description>MOJO to check whether a given git branch still exists: if not, the corresponding SONAR project will be deleted.
TODO: clean up code + tests
</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>true</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.viae.maven.sonar.mojos.SonarGitBranchDeletionSyncMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>repoConfigurations</name>
          <type>java.util.Map</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>repoPassword</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>repoUser</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarPassword</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarServer</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarUser</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <repoConfigurations implementation="java.util.Map">${sonar.repo-configuration}</repoConfigurations>
        <repoPassword implementation="java.lang.String">${repo.password}</repoPassword>
        <repoUser implementation="java.lang.String">${repo.login}</repoUser>
        <sonarPassword implementation="java.lang.String">${sonar.password}</sonarPassword>
        <sonarServer implementation="java.lang.String">${sonar.host.url}</sonarServer>
        <sonarUser implementation="java.lang.String">${sonar.login}</sonarUser>
      </configuration>
    </mojo>
    <mojo>
      <goal>validate-qualitygate</goal>
      <description>MOJO to validate a project against a given quality gate.
Created by Vandeperre Maarten on 29/04/2016.
</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>true</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.viae.maven.sonar.mojos.SonarMavenBuildBreakerMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>branchName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>qualityGateName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarExecutionStart</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarKey</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarPassword</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarServer</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sonarUser</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <branchName implementation="java.lang.String">${sonar.branch.name}</branchName>
        <qualityGateName implementation="java.lang.String">${sonar.qualitygate}</qualityGateName>
        <sonarExecutionStart implementation="java.lang.String">${sonar.execution.start}</sonarExecutionStart>
        <sonarKey implementation="java.lang.String">${sonar.projectKey}</sonarKey>
        <sonarPassword implementation="java.lang.String">${sonar.password}</sonarPassword>
        <sonarServer implementation="java.lang.String">${sonar.host.url}</sonarServer>
        <sonarUser implementation="java.lang.String">${sonar.login}</sonarUser>
      </configuration>
    </mojo>
  </mojos>
</plugin>